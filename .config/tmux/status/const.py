# From: https://man7.org/linux/man-pages/man1/tmux.1.html#FORMATS

active_window_index          = "#{active_window_index}"             # Index of active window in session
alternate_on                 = "#{alternate_on}"                    #1 if pane is in alternate screen
alternate_saved_x            = "#{alternate_saved_x}"               #Saved cursor X in alternate screen
alternate_saved_y            = "#{alternate_saved_y}"               #Saved cursor Y in alternate screen
buffer_created               = "#{buffer_created}"                  #Time buffer created
buffer_name                  = "#{buffer_name}"                     #Name of buffer
buffer_sample                = "#{buffer_sample}"                   #Sample of start of buffer
buffer_size                  = "#{buffer_size}"                     #Size of the specified buffer in bytes
client_activity              = "#{client_activity}"                 #Time client last had activity
client_cell_height           = "#{client_cell_height}"              #Height of each client cell in pixels
client_cell_width            = "#{client_cell_width}"               #Width of each client cell in pixels
client_control_mode          = "#{client_control_mode}"             #1 if client is in control mode
client_created               = "#{client_created}"                  #Time client created
client_discarded             = "#{client_discarded}"                #Bytes discarded when client behind
client_flags                 = "#{client_flags}"                    #List of client flags
client_height                = "#{client_height}"                   #Height of client
client_key_table             = "#{client_key_table}"                #Current key table
client_last_session          = "#{client_last_session}"             #Name of the client's last session
client_name                  = "#{client_name}"                     #Name of client
client_pid                   = "#{client_pid}"                      #PID of client process
client_prefix                = "#{client_prefix}"                   #1 if prefix key has been pressed
client_readonly              = "#{client_readonly}"                 #1 if client is read-only
client_session               = "#{client_session}"                  #Name of the client's session
client_termfeatures          = "#{client_termfeatures}"             #Terminal features of client, if any
client_termname              = "#{client_termname}"                 #Terminal name of client
client_termtype              = "#{client_termtype}"                 #Terminal type of client, if available
client_tty                   = "#{client_tty}"                      #Pseudo terminal of client
client_uid                   = "#{client_uid}"                      #UID of client process
client_user                  = "#{client_user}"                     #User of client process
client_utf8                  = "#{client_utf8}"                     #1 if client supports UTF-8
client_width                 = "#{client_width}"                    #Width of client
client_written               = "#{client_written}"                  #Bytes written to client
command                      = "#{command}"                         #Name of command in use, if any
command_list_alias           = "#{command_list_alias}"              #Command alias if listing commands
command_list_name            = "#{command_list_name}"               #Command name if listing commands
command_list_usage           = "#{command_list_usage}"              #Command usage if listing commands
config_files                 = "#{config_files}"                    #List of configuration files loaded
copy_cursor_line             = "#{copy_cursor_line}"                #Line the cursor is on in copy mode
copy_cursor_word             = "#{copy_cursor_word}"                #Word under cursor in copy mode
copy_cursor_x                = "#{copy_cursor_x}"                   #Cursor X position in copy mode
copy_cursor_y                = "#{copy_cursor_y}"                   #Cursor Y position in copy mode
current_file                 = "#{current_file}"                    #Current configuration file
cursor_character             = "#{cursor_character}"                #Character at cursor in pane
cursor_flag                  = "#{cursor_flag}"                     #Pane cursor flag
cursor_x                     = "#{cursor_x}"                        #Cursor X position in pane
cursor_y                     = "#{cursor_y}"                        #Cursor Y position in pane
history_bytes                = "#{history_bytes}"                   #Number of bytes in window history
history_limit                = "#{history_limit}"                   #Maximum window history lines
history_size                 = "#{history_size}"                    #Size of history in lines
hook                         = "#{hook}"                            #Name of running hook, if any
hook_client                  = "#{hook_client}"                     #Name of client where hook was run, if any
hook_pane                    = "#{hook_pane}"                       #ID of pane where hook was run, if any
hook_session                 = "#{hook_session}"                    #ID of session where hook was run, if any
hook_session_name            = "#{hook_session_name}"               #Name of session where hook was run, if any
hook_window                  = "#{hook_window}"                     #ID of window where hook was run, if any
hook_window_name             = "#{hook_window_name}"                #Name of window where hook was run, if any
host                         = "#{host}"                            #Hostname of local host
host_short                   = "#{host_short}"                      #Hostname of local host (no domain name)
insert_flag                  = "#{insert_flag}"                     #Pane insert flag
keypad_cursor_flag           = "#{keypad_cursor_flag}"              #Pane keypad cursor flag
keypad_flag                  = "#{keypad_flag}"                     #Pane keypad flag
last_window_index            = "#{last_window_index}"               #Index of last window in session
line                         = "#{line}"                            #Line number in the list
mouse_all_flag               = "#{mouse_all_flag}"                  #Pane mouse all flag
mouse_any_flag               = "#{mouse_any_flag}"                  #Pane mouse any flag
mouse_button_flag            = "#{mouse_button_flag}"               #Pane mouse button flag
mouse_hyperlink              = "#{mouse_hyperlink}"                 #Hyperlink under mouse, if any
mouse_line                   = "#{mouse_line}"                      #Line under mouse, if any
mouse_sgr_flag               = "#{mouse_sgr_flag}"                  #Pane mouse SGR flag
mouse_standard_flag          = "#{mouse_standard_flag}"             #Pane mouse standard flag
mouse_utf8_flag              = "#{mouse_utf8_flag}"                 #Pane mouse UTF-8 flag
mouse_word                   = "#{mouse_word}"                      #Word under mouse, if any
mouse_x                      = "#{mouse_x}"                         #Mouse X position, if any
mouse_y                      = "#{mouse_y}"                         #Mouse Y position, if any
next_session_id              = "#{next_session_id}"                 #Unique session ID for next new session
origin_flag                  = "#{origin_flag}"                     #Pane origin flag
pane_active                  = "#{pane_active}"                     #1 if active pane
pane_at_bottom               = "#{pane_at_bottom}"                  #1 if pane is at the bottom of window
pane_at_left                 = "#{pane_at_left}"                    #1 if pane is at the left of window
pane_at_right                = "#{pane_at_right}"                   #1 if pane is at the right of window
pane_at_top                  = "#{pane_at_top}"                     #1 if pane is at the top of window
pane_bg                      = "#{pane_bg}"                         #Pane background colour
pane_bottom                  = "#{pane_bottom}"                     #Bottom of pane
pane_current_command         = "#{pane_current_command}"            #Current command if available
pane_current_path            = "#{pane_current_path}"               #Current path if available
pane_dead                    = "#{pane_dead}"                       #1 if pane is dead
pane_dead_signal             = "#{pane_dead_signal}"                #Exit signal of process in dead pane
pane_dead_status             = "#{pane_dead_status}"                #Exit status of process in dead pane
pane_dead_time               = "#{pane_dead_time}"                  #Exit time of process in dead pane
pane_fg                      = "#{pane_fg}"                         #Pane foreground colour
pane_format                  = "#{pane_format}"                     #1 if format is for a pane
pane_height                  = "#{pane_height}"                     #Height of pane
pane_id                      = "#{pane_id}"                         #Unique pane ID
pane_in_mode                 = "#{pane_in_mode}"                    #1 if pane is in a mode
pane_index                   = "#{pane_index}"                      #Index of pane
pane_input_off               = "#{pane_input_off}"                  #1 if input to pane is disabled
pane_last                    = "#{pane_last}"                       #1 if last pane
pane_left                    = "#{pane_left}"                       #Left of pane
pane_marked                  = "#{pane_marked}"                     #1 if this is the marked pane
pane_marked_set              = "#{pane_marked_set}"                 #1 if a marked pane is set
pane_mode                    = "#{pane_mode}"                       #Name of pane mode, if any
pane_path                    = "#{pane_path}"                       #Path of pane (can be set by application)
pane_pid                     = "#{pane_pid}"                        #PID of first process in pane
pane_pipe                    = "#{pane_pipe}"                       #1 if pane is being piped
pane_right                   = "#{pane_right}"                      #Right of pane
pane_search_string           = "#{pane_search_string}"              #Last search string in copy mode
pane_start_command           = "#{pane_start_command}"              #Command pane started with
pane_start_path              = "#{pane_start_path}"                 #Path pane started with
pane_synchronized            = "#{pane_synchronized}"               #1 if pane is synchronized
pane_tabs                    = "#{pane_tabs}"                       #Pane tab positions
pane_title                   = "#{pane_title}"                      #Title of pane (can be set by application)
pane_top                     = "#{pane_top}"                        #Top of pane
pane_tty                     = "#{pane_tty}"                        #Pseudo terminal of pane
pane_unseen_changes          = "#{pane_unseen_changes}"             #1 if there were changes in pane while in mode
pane_width                   = "#{pane_width}"                      #Width of pane
pid                          = "#{pid}"                             #Server PID
rectangle_toggle             = "#{rectangle_toggle}"                #1 if rectangle selection is activated
scroll_position              = "#{scroll_position}"                 #Scroll position in copy mode
scroll_region_lower          = "#{scroll_region_lower}"             #Bottom of scroll region in pane
scroll_region_upper          = "#{scroll_region_upper}"             #Top of scroll region in pane
search_match                 = "#{search_match}"                    #Search match if any
search_present               = "#{search_present}"                  #1 if search started in copy mode
selection_active             = "#{selection_active}"                #1 if selection started and changes with the cursor in copy mode
selection_end_x              = "#{selection_end_x}"                 #X position of the end of the selection
selection_end_y              = "#{selection_end_y}"                 #Y position of the end of the selection
selection_present            = "#{selection_present}"               #1 if selection started in copy mode
selection_start_x            = "#{selection_start_x}"               #X position of the start of the selection
selection_start_y            = "#{selection_start_y}"               #Y position of the start of the selection
server_sessions              = "#{server_sessions}"                 #Number of sessions
session_activity             = "#{session_activity}"                #Time of session last activity
session_alerts               = "#{session_alerts}"                  #List of window indexes with alerts
session_attached             = "#{session_attached}"                #Number of clients session is attached to
session_attached_list        = "#{session_attached_list}"           #List of clients session is attached to
session_created              = "#{session_created}"                 #Time session created
session_format               = "#{session_format}"                  #1 if format is for a session
session_group                = "#{session_group}"                   #Name of session group
session_group_attached       = "#{session_group_attached}"          #Number of clients sessions in group are attached to
session_group_attached_list  = "#{session_group_attached_list}"     #List of clients sessions in group are attached to
session_group_list           = "#{session_group_list}"              #List of sessions in group
session_group_many_attached  = "#{session_group_many_attached}"     #1 if multiple clients attached to sessions in group
session_group_size           = "#{session_group_size}"              #Size of session group
session_grouped              = "#{session_grouped}"                 #1 if session in a group
session_id                   = "#{session_id}"                      #Unique session ID
session_last_attached        = "#{session_last_attached}"           #Time session last attached
session_many_attached        = "#{session_many_attached}"           #1 if multiple clients attached
session_marked               = "#{session_marked}"                  #1 if this session contains the marked pane
session_name                 = "#{session_name}"                    #Name of session
session_path                 = "#{session_path}"                    #Working directory of session
session_stack                = "#{session_stack}"                   #Window indexes in most recent order
session_windows              = "#{session_windows}"                 #Number of windows in session
socket_path                  = "#{socket_path}"                     #Server socket path
start_time                   = "#{start_time}"                      #Server start time
uid                          = "#{uid}"                             #Server UID
user                         = "#{user}"                            #Server user
version                      = "#{version}"                         #Server version
window_active                = "#{window_active}"                   #1 if window active
window_active_clients        = "#{window_active_clients}"           #Number of clients viewing this window
window_active_clients_list   = "#{window_active_clients_list}"      #List of clients viewing this window
window_active_sessions       = "#{window_active_sessions}"          #Number of sessions on which this window is active
window_active_sessions_list  = "#{window_active_sessions_list}"     #List of sessions on which this window is active
window_activity              = "#{window_activity}"                 #Time of window last activity
window_activity_flag         = "#{window_activity_flag}"            #1 if window has activity
window_bell_flag             = "#{window_bell_flag}"                #1 if window has bell
window_bigger                = "#{window_bigger}"                   #1 if window is larger than client
window_cell_height           = "#{window_cell_height}"              #Height of each cell in pixels
window_cell_width            = "#{window_cell_width}"               #Width of each cell in pixels
window_end_flag              = "#{window_end_flag}"                 #1 if window has the highest index
window_flags                 = "#{window_flags}"                    #Window flags with # escaped as ##
window_format                = "#{window_format}"                   #1 if format is for a window
window_height                = "#{window_height}"                   #Height of window
window_id                    = "#{window_id}"                       #Unique window ID
window_index                 = "#{window_index}"                    #Index of window
window_last_flag             = "#{window_last_flag}"                #1 if window is the last used
window_layout                = "#{window_layout}"                   #Window layout description, ignoring zoomed window panes
window_linked                = "#{window_linked}"                   #1 if window is linked across sessions
window_linked_sessions       = "#{window_linked_sessions}"          #Number of sessions this window is linked to
window_linked_sessions_list  = "#{window_linked_sessions_list}"     #List of sessions this window is linked to
window_marked_flag           = "#{window_marked_flag}"              #1 if window contains the marked pane
window_name                  = "#{window_name}"                     #Name of window
window_offset_x              = "#{window_offset_x}"                 #X offset into window if larger than client
window_offset_y              = "#{window_offset_y}"                 #Y offset into window if larger than client
window_panes                 = "#{window_panes}"                    #Number of panes in window
window_raw_flags             = "#{window_raw_flags}"                #Window flags with nothing escaped
window_silence_flag          = "#{window_silence_flag}"             #1 if window has silence alert
window_stack_index           = "#{window_stack_index}"              #Index in session most recent stack
window_start_flag            = "#{window_start_flag}"               #1 if window has the lowest index
window_visible_layout        = "#{window_visible_layout}"           #Window layout description, respecting zoomed window panes
window_width                 = "#{window_width}"                    #Width of window
window_zoomed_flag           = "#{window_zoomed_flag}"              #1 if window is zoomed
wrap_flag                    = "#{wrap_flag}"                       #Pane wrap flag
